var L=Object.defineProperty;var i=(t,a)=>L(t,"name",{value:a,configurable:!0});import{isMainThread as b}from"node:worker_threads";import{i as h,a as M,e as v,m as $}from"../node-features-_8ZFwP_x.mjs";import{r as I}from"../register-2mKsVc-c.mjs";import"../get-pipe-path-BHW2eJdv.mjs";import"node:module";import y from"node:path";import{fileURLToPath as k,pathToFileURL as R}from"node:url";import"get-tsconfig";import U from"node:fs";import"esbuild";import"node:crypto";import{i as A,a as D,t as W,b as C,r as B}from"../index-DeKCL_WS.mjs";import{p as E}from"../client-BQVF1NaW.mjs";import{l as _,t as l,a as q,b as T,f as N,c as G,d as J,e as H,m as Q,g as F,h as X,j as z}from"../register-DS4vlmcl.mjs";import"../require-CMScvU0S.mjs";import{readFile as K}from"node:fs/promises";import"module";import"../temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:net";const c={active:!0},x=i(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);c.namespace=t.namespace,t.tsconfig!==!1&&_(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(c.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(c.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),V=i(()=>(_(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),d=new Map,Y=i(async t=>{if(d.has(t))return d.get(t);if(!await U.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const s=await U.promises.readFile(t,"utf8");try{const r=JSON.parse(s);return d.set(t,r),r}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),Z=i(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const s=k(a),r=await Y(s);if(r)return r;const e=a;if(a=new URL("../package.json",a),a.pathname===e.pathname)break}},"findPackageJson"),tt=i(async t=>(await Z(t))?.type??"commonjs","getPackageType"),at=i(t=>{[t]=t.split("?");const a=y.extname(t);if(a===".mts")return"module";if(a===".cts")return"commonjs"},"getFormatFromExtension"),et=i(t=>{const a=at(t);if(a)return a;if(l.test(t))return tt(t)},"getFormatFromFileUrl"),u="tsx-namespace=",w=i(t=>{const a=t.indexOf(u);if(a===-1)return;const s=t[a-1];if(s!=="?"&&s!=="&")return;const r=a+u.length,e=t.indexOf("&",r);return e===-1?t.slice(r):t.slice(r,e)},"getNamespace"),P=h(M)?"importAttributes":"importAssertions",st=i(async(t,a,s)=>{if(!c.active)return s(t,a);const r=w(t);if(c.namespace&&c.namespace!==r)return s(t,a);if(c.port){const n=new URL(t);n.searchParams.delete("tsx-namespace"),c.port.postMessage({type:"load",url:n.toString()})}E.send&&E.send({type:"dependency",path:t}),q.test(t)&&(a[P]||(a[P]={}),a[P].type="json");const e=await s(t,a),o=t.startsWith("file://")?k(t):t;if(e.format==="commonjs"&&h(v)&&e.responseURL?.startsWith("file:")&&!o.endsWith(".cjs")){const n=await K(new URL(t),"utf8");if(!o.endsWith(".js")||A(n)){const f=D(n,o,{tsconfigRaw:N?.(o)}),p=r?`${o}?namespace=${encodeURIComponent(r)}`:o;return e.responseURL=`data:text/javascript,${encodeURIComponent(f.code)}?filePath=${encodeURIComponent(p)}`,e}}if(!e.source)return e;const m=e.source.toString();if(e.format==="json"||l.test(t)){const n=await W(m,o,{tsconfigRaw:N?.(o)});return{format:"module",source:T(n)}}if(e.format==="module"){const n=C(o,m);n&&(e.source=T(n))}return e},"load"),S=i(t=>{if(t.url)return t.url;const a=t.message.match(/^Cannot find module '([^']+)'/);if(a){const[,r]=a;return r}const s=t.message.match(/^Cannot find package '([^']+)'/);if(s){const[,r]=s,e=R(r);e.pathname.endsWith("/package.json")||(e.pathname+="/package.json");const o=B(e);if(o?.main)return new URL(o.main,e).toString()}},"getMissingPathFromNotFound"),g=i(async(t,a,s,r)=>{const e=Q(t,!0);if(!e)return;let o;for(const m of e)try{return await s(m,a)}catch(n){const{code:f}=n;if(f!=="ERR_MODULE_NOT_FOUND"&&f!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n;o=n}if(r)throw o},"resolveExtensions"),O=i(async(t,a,s)=>{if(!J(t)&&F&&!a.parentURL?.includes("/node_modules/")){const e=F(t);for(const o of e)try{return await O(R(o).toString(),a,s)}catch{}}if(!z.test(t)&&(l.test(a.parentURL)||X)){const e=await g(t,a,s);if(e)return e}try{return await s(t,a)}catch(e){if(e instanceof Error){const o=e;if(o.code==="ERR_MODULE_NOT_FOUND"){const m=S(o);if(m){const n=await g(m,a,s);if(n)return n}}}throw e}},"resolveBase"),rt=i(async(t,a,s)=>{const[r,e]=t.split("?");if(H.test(t))return await g(`${r}index${e?`?${e}`:""}`,a,s,!0);try{return await O(t,a,s)}catch(o){if(o instanceof Error){const m=o;if(m.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const n=S(m);if(n)try{return await g(`${n}/index${e?`?${e}`:""}`,a,s,!0)}catch(f){const p=f,{message:j}=p;throw p.message=p.message.replace(`${"/index".replace("/",y.sep)}'`,"'"),p.stack=p.stack.replace(j,p.message),p}}}throw o}},"resolveDirectory"),ot=i(async(t,a,s)=>{if(!c.active||t.startsWith("node:"))return s(t,a);const r=w(t)??(a.parentURL&&w(a.parentURL));if(c.namespace&&c.namespace!==r)return s(t,a);const e=await rt(t,a,s);return e.format==="builtin"||(!e.format&&e.url.startsWith(G)&&(e.format=await et(e.url)),r&&!e.url.includes(u)&&J(e.url)&&(e.url+=(e.url.includes("?")?"&":"?")+u+r)),e},"resolve");h($)&&b&&I();export{V as globalPreload,x as initialize,st as load,ot as resolve};
