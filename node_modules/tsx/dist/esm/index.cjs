"use strict";var v=Object.defineProperty;var c=(e,t)=>v(e,"name",{value:t,configurable:!0});var F=require("node:worker_threads"),m=require("../node-features-roYmp9jK.cjs"),S=require("../register-Bl2N-eHz.cjs");require("../get-pipe-path-BoR10qr8.cjs"),require("node:module");var R=require("node:path"),h=require("node:url");require("get-tsconfig");var U=require("node:fs");require("esbuild"),require("node:crypto");var g=require("../index-BsW12Ot9.cjs"),_=require("../client-D6NvIMSC.cjs"),i=require("../register-CBZjvfJi.cjs");require("../require-Cin_loEz.cjs");var N=require("node:fs/promises");require("module"),require("../temporary-directory-B83uKxJF.cjs"),require("node:os"),require("node:net");const u={active:!0},J=c(async e=>{if(!e)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);u.namespace=e.namespace,e.tsconfig!==!1&&i.loadTsconfig(e.tsconfig??process.env.TSX_TSCONFIG_PATH),e.port&&(u.port=e.port,e.port.on("message",t=>{t==="deactivate"&&(u.active=!1,e.port.postMessage({type:"deactivated"}))}))},"initialize"),L=c(()=>(i.loadTsconfig(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),l=new Map,M=c(async e=>{if(l.has(e))return l.get(e);if(!await U.promises.access(e).then(()=>!0,()=>!1)){l.set(e,void 0);return}const a=await U.promises.readFile(e,"utf8");try{const s=JSON.parse(a);return l.set(e,s),s}catch{throw new Error(`Error parsing: ${e}`)}},"readPackageJson"),O=c(async e=>{let t=new URL("package.json",e);for(;!t.pathname.endsWith("/node_modules/package.json");){const a=h.fileURLToPath(t),s=await M(a);if(s)return s;const r=t;if(t=new URL("../package.json",t),t.pathname===r.pathname)break}},"findPackageJson"),j=c(async e=>(await O(e))?.type??"commonjs","getPackageType"),$=c(e=>{[e]=e.split("?");const t=R.extname(e);if(t===".mts")return"module";if(t===".cts")return"commonjs"},"getFormatFromExtension"),b=c(e=>{const t=$(e);if(t)return t;if(i.tsExtensionsPattern.test(e))return j(e)},"getFormatFromFileUrl"),P="tsx-namespace=",y=c(e=>{const t=e.indexOf(P);if(t===-1)return;const a=e[t-1];if(a!=="?"&&a!=="&")return;const s=t+P.length,r=e.indexOf("&",s);return r===-1?e.slice(s):e.slice(s,r)},"getNamespace"),k=m.isFeatureSupported(m.importAttributes)?"importAttributes":"importAssertions",A=c(async(e,t,a)=>{if(!u.active)return a(e,t);const s=y(e);if(u.namespace&&u.namespace!==s)return a(e,t);if(u.port){const o=new URL(e);o.searchParams.delete("tsx-namespace"),u.port.postMessage({type:"load",url:o.toString()})}_.parent.send&&_.parent.send({type:"dependency",path:e}),i.isJsonPattern.test(e)&&(t[k]||(t[k]={}),t[k].type="json");const r=await a(e,t),n=e.startsWith("file://")?h.fileURLToPath(e):e;if(r.format==="commonjs"&&m.isFeatureSupported(m.esmLoadReadFile)&&r.responseURL?.startsWith("file:")&&!n.endsWith(".cjs")){const o=await N.readFile(new URL(e),"utf8");if(!n.endsWith(".js")||g.isESM(o)){const f=g.transformSync(o,n,{tsconfigRaw:i.fileMatcher?.(n)}),d=s?`${n}?namespace=${encodeURIComponent(s)}`:n;return r.responseURL=`data:text/javascript,${encodeURIComponent(f.code)}?filePath=${encodeURIComponent(d)}`,r}}if(!r.source)return r;const p=r.source.toString();if(r.format==="json"||i.tsExtensionsPattern.test(e)){const o=await g.transform(p,n,{tsconfigRaw:i.fileMatcher?.(n)});return{format:"module",source:i.inlineSourceMap(o)}}if(r.format==="module"){const o=g.transformDynamicImport(n,p);o&&(r.source=i.inlineSourceMap(o))}return r},"load"),q=c(e=>{if(e.url)return e.url;const t=e.message.match(/^Cannot find module '([^']+)'/);if(t){const[,s]=t;return s}const a=e.message.match(/^Cannot find package '([^']+)'/);if(a){const[,s]=a,r=h.pathToFileURL(s);r.pathname.endsWith("/package.json")||(r.pathname+="/package.json");const n=g.readJsonFile(r);if(n?.main)return new URL(n.main,r).toString()}},"getMissingPathFromNotFound"),w=c(async(e,t,a,s)=>{const r=i.mapTsExtensions(e,!0);if(!r)return;let n;for(const p of r)try{return await a(p,t)}catch(o){const{code:f}=o;if(f!=="ERR_MODULE_NOT_FOUND"&&f!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw o;n=o}if(s)throw n},"resolveExtensions"),E=c(async(e,t,a)=>{if(!i.requestAcceptsQuery(e)&&i.tsconfigPathsMatcher&&!t.parentURL?.includes("/node_modules/")){const r=i.tsconfigPathsMatcher(e);for(const n of r)try{return await E(h.pathToFileURL(n).toString(),t,a)}catch{}}if(!i.isBarePackageNamePattern.test(e)&&(i.tsExtensionsPattern.test(t.parentURL)||i.allowJs)){const r=await w(e,t,a);if(r)return r}try{return await a(e,t)}catch(r){if(r instanceof Error){const n=r;if(n.code==="ERR_MODULE_NOT_FOUND"){const p=q(n);if(p){const o=await w(p,t,a);if(o)return o}}}throw r}},"resolveBase"),I=c(async(e,t,a)=>{const[s,r]=e.split("?");if(i.isDirectoryPattern.test(e))return await w(`${s}index${r?`?${r}`:""}`,t,a,!0);try{return await E(e,t,a)}catch(n){if(n instanceof Error){const p=n;if(p.code==="ERR_UNSUPPORTED_DIR_IMPORT"){const o=q(p);if(o)try{return await w(`${o}/index${r?`?${r}`:""}`,t,a,!0)}catch(f){const d=f,{message:T}=d;throw d.message=d.message.replace(`${"/index".replace("/",R.sep)}'`,"'"),d.stack=d.stack.replace(T,d.message),d}}}throw n}},"resolveDirectory"),D=c(async(e,t,a)=>{if(!u.active||e.startsWith("node:"))return a(e,t);const s=y(e)??(t.parentURL&&y(t.parentURL));if(u.namespace&&u.namespace!==s)return a(e,t);const r=await I(e,t,a);return r.format==="builtin"||(!r.format&&r.url.startsWith(i.fileUrlPrefix)&&(r.format=await b(r.url)),s&&!r.url.includes(P)&&i.requestAcceptsQuery(r.url)&&(r.url+=(r.url.includes("?")?"&":"?")+P+s)),r},"resolve");m.isFeatureSupported(m.moduleRegister)&&F.isMainThread&&S.register(),exports.globalPreload=L,exports.initialize=J,exports.load=A,exports.resolve=D;
